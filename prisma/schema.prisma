// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator jsonSchema {
  provider              = "prisma-json-schema-generator"
  output                = "./"
  includeRequiredFields = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int          @id @default(autoincrement())
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  email               String       @unique
  name                String
  password            String
  role                Role         @default(USER)
  isEmailVerified     Boolean      @default(false)
  Token               Token[]
  wallet              Wallet?
  payRequestsCreated  PayRequest[] @relation(name: "creator")
  payRequestsReceived PayRequest[] @relation(name: "receiver")
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
}

model Wallet {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  user          User          @relation(fields: [userId], references: [id])
  userId        Int           @unique
  balanceInSats Int
  disabled      Boolean
  transactions  Transaction[]
}

model PayRequest {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  receiver     User          @relation(name: "receiver", fields: [receiverId], references: [id])
  receiverId   Int
  creator      User          @relation(name: "creator", fields: [creatorId], references: [id])
  creatorId    Int
  amountInSats Int
  description  String
  meta         Json?
  paid         Boolean
  transactions Transaction[]
}

model Transaction {
  id             Int             @id @default(autoincrement())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  wallet         Wallet          @relation(fields: [walletId], references: [id])
  walletId       Int
  amountInSats   Int
  type           TransactionType
  description    String?
  walletImpacted Boolean
  invoiceSettled Boolean?
  invoice        Json?
  payRequest     PayRequest?     @relation(fields: [payRequestId], references: [id])
  payRequestId   Int?
}

enum TransactionType {
  SEND
  RECEIVE
  WITHDRAW
  DEPOSIT
}

enum Role {
  USER
  ADMIN
  APPLICATION
}

enum TokenType {
  ACCESS
  REFRESH
  IDENTITY
  RESET_PASSWORD
  VERIFY_EMAIL
  APPLICATION
}
